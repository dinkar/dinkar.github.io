{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/utils/media.js","webpack:///./config/SiteConfig.js","webpack:///./src/components/Article.js","webpack:///./src/components/Button.js","webpack:///./src/components/Header.js","webpack:///./config/Theme.js","webpack:///./src/components/Layout.js","webpack:///./src/components/PrevNext.js","webpack:///./src/components/SectionTitle.js","webpack:///./src/components/SEO.js","webpack:///./src/components/Subline.js","webpack:///./src/components/Wrapper.js"],"names":["Content","styled_components__WEBPACK_IMPORTED_MODULE_4__","div","withConfig","displayName","componentId","_utils_media__WEBPACK_IMPORTED_MODULE_6__","tablet","phone","Hero","props","theme","colors","grey","dark","IndexPage","_ref","postEdges","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","components__WEBPACK_IMPORTED_MODULE_5__","map","post","title","node","frontmatter","date","excerpt","timeToRead","slug","fields","category","key","__webpack_exports__","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_2___default","shape","array","isRequired","IndexQuery","__webpack_require__","d","media","module","exports","pathPrefix","siteTitle","siteTitleAlt","siteUrl","siteLanguage","siteBanner","favicon","siteDescription","author","siteLogo","userTwitter","ogSiteName","ogLanguage","themeColor","backgroundColor","headerFontFamily","bodyFontFamily","baseFontSize","Post","styled_components_browser_esm","article","Title","h2","Initiale","span","Excerpt","p","Article_Article","firstChar","charAt","react_default","gatsby_browser_entry","to","components_Subline","kebabCase_default","components_Article","prop_types_default","string","number","components_Button","button","primary","big","transitions","normal","Object","polished_es","Wrapper","header","Header_Header","children","components_Header","oneOfType","Theme","bg","default","light","ultraLight","fontSize","small","_templateObject","Footer","footer","Layout_Layout","query","render","Fragment","components_SEO","href","site","buildTime","_1719855500","components_Layout","PrevNext_Wrapper","Prev","Next","PrevNext_PrevNext","next","prev","components_PrevNext","object","defaultProps","components_SectionTitle","SEO_SEO","description","image","postURL","postNode","postPath","postSEO","realPrefix","SiteConfig_default","blogURL","schemaOrgJSONLD","@context","@type","@id","url","name","alternateName","headline","datePublished","dateModified","publisher","logo","isPartOf","mainEntityOfPage","Helmet_default","lang","content","type","JSON","stringify","property","siteFBAppID","bool","sectionTitle","components_Wrapper"],"mappings":"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","file":"component---src-pages-index-js-2059e5125413f7c79e24.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, graphql } from 'gatsby';\nimport styled from 'styled-components';\nimport { Layout, Article, Wrapper, Button, SectionTitle } from 'components';\nimport { media } from '../utils/media';\n\nconst Content = styled.div`\n  grid-column: 2;\n  box-shadow: 0 4px 120px rgba(0, 0, 0, 0.1);\n  border-radius: 1rem;\n  padding: 3rem 6rem;\n  @media ${media.tablet} {\n    padding: 3rem 2rem;\n  }\n  @media ${media.phone} {\n    padding: 2rem 1.5rem;\n  }\n  overflow: hidden;\n`;\n\nconst Hero = styled.div`\n  grid-column: 2;\n  padding: 3rem 2rem 2rem 2rem;\n  text-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);\n  color: ${props => props.theme.colors.grey.dark};\n\n  p {\n    font-size: 1.68rem;\n    margin-top: -1rem;\n    @media ${media.phone} {\n      font-size: 1.25rem;\n    }\n    @media ${media.tablet} {\n      font-size: 1.45rem;\n    }\n  }\n`;\n\nconst IndexPage = ({\n  data: {\n    allMarkdownRemark: { edges: postEdges },\n  },\n}) => (\n  <Layout>\n    <Wrapper>\n      <Hero>\n        <h1>Hi.</h1>\n        <p>\n          I&apos;m Dinkar Pundir. And this is my blog.\n        </p>\n      </Hero>\n      <Content>\n        <SectionTitle>Latest stories</SectionTitle>\n        {postEdges.map(post => (\n          <Article\n            title={post.node.frontmatter.title}\n            date={post.node.frontmatter.date}\n            excerpt={post.node.excerpt}\n            timeToRead={post.node.timeToRead}\n            slug={post.node.fields.slug}\n            category={post.node.frontmatter.category}\n            key={post.node.fields.slug}\n          />\n        ))}\n      </Content>\n    </Wrapper>\n  </Layout>\n);\n\nexport default IndexPage;\n\nIndexPage.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.array.isRequired,\n    }),\n  }).isRequired,\n};\n\nexport const IndexQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"DD.MM.YYYY\")\n            category\n          }\n          excerpt(pruneLength: 200)\n          timeToRead\n        }\n      }\n    }\n  }\n`;\n","const sizes = {\n  tablet: '1200px',\n  phone: '600px',\n};\n\nexport const media = {\n  tablet: `(max-width: ${sizes.tablet})`,\n  phone: `(max-width: ${sizes.phone})`,\n};\n","module.exports = {\n  pathPrefix: '/', // Prefix for all links.\n\n  siteTitle: 'Subliminal Undertones', // Navigation and Site Title\n  siteTitleAlt: 'Subliminal Undertones - Mostly Harmless', // Alternative Site title for SEO\n  siteUrl: 'https://dinkar.github.io', // Domain of your site. No trailing slash!\n  siteLanguage: 'en', // Language Tag on <html> element\n  siteBanner: '/social/banner.jpg', // Your image for og:image tag. You can find it in the /static folder\n  favicon: 'src/favicon.png', // Your image for favicons. You can find it in the /src folder\n  siteDescription: 'My Punching Bag', // Your site description\n  author: 'DinkarPundir', // Author for schemaORGJSONLD\n\n  siteLogo: '/social/logo.png', // Image for schemaORGJSONLD\n  // siteFBAppID: '123456789', // Facebook App ID - Optional\n  userTwitter: '@dinkarpundir', // Twitter Username - Optional\n  ogSiteName: '', // Facebook Site Name - Optional\n  ogLanguage: 'en_US', // Facebook Language\n\n  // Manifest and Progress color\n  // See: https://developers.google.com/web/fundamentals/web-app-manifest/\n  themeColor: '#3498DB',\n  backgroundColor: '#2b2e3c',\n\n  // Settings for typography.js\n  headerFontFamily: 'Bitter',\n  bodyFontFamily: 'Open Sans',\n  baseFontSize: '18px',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\n\nimport { Subline } from 'components';\n\nconst Post = styled.article`\n  display: flex;\n  flex-direction: column;\n  margin-top: 3.5rem;\n  margin-bottom: 3.5rem;\n`;\n\nconst Title = styled.h2`\n  position: relative;\n  text-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);\n  margin-bottom: 0.75rem;\n`;\n\nconst Initiale = styled.span`\n  position: absolute;\n  font-size: 7rem;\n  transform: translate(-50%, -50%);\n  opacity: 0.08;\n  user-select: none;\n  z-index: -1;\n`;\n\nconst Excerpt = styled.p`\n  grid-column: -1 / 1;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n`;\n\nconst Article = ({ title, date, excerpt, slug, timeToRead, category }) => {\n  const firstChar = title.charAt(0);\n\n  return (\n    <Post>\n      <Title>\n        <Initiale>{firstChar}</Initiale>\n        <Link to={slug}>{title}</Link>\n      </Title>\n      <Subline>\n        {date} &mdash; {timeToRead} Min Read &mdash; In{' '}\n        <Link to={`/categories/${kebabCase(category)}`}>{category}</Link>\n      </Subline>\n      <Excerpt>{excerpt}</Excerpt>\n    </Post>\n  );\n};\n\nexport default Article;\n\nArticle.propTypes = {\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  excerpt: PropTypes.string.isRequired,\n  slug: PropTypes.string.isRequired,\n  timeToRead: PropTypes.number.isRequired,\n  category: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport { lighten } from 'polished';\n\nconst Button = styled.button`\n  background: ${props => props.theme.colors.primary};\n  border: none;\n  display: inline-flex;\n  align-items: center;\n  border-radius: ${props => (props.big ? '1.5rem' : '1rem')};\n  font-size: ${props => (props.big ? '1.2rem' : '1rem')};\n  color: white;\n  padding: ${props => (props.big ? '0.35rem 1.6rem' : '0.25rem 1.5rem')};\n  transition: all ${props => props.theme.transitions.normal};\n  box-shadow: 0 4px 6px rgba(50, 50, 93, 0.11), 0 1px 3px rgba(0, 0, 0, 0.08);\n  &:hover {\n    background: ${props => lighten(0.05, props.theme.colors.primary)};\n    cursor: pointer;\n    transform: translateY(-2px);\n  }\n  &:focus {\n    outline: none;\n  }\n  svg {\n    width: 20px;\n    height: 20px;\n    margin-right: 0.75rem;\n    fill: white;\n  }\n`;\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { darken, lighten } from 'polished';\n\nconst Wrapper = styled.header`\n  background: linear-gradient(\n    45deg,\n    ${props => darken(0.1, props.theme.colors.primary)},\n    ${props => lighten(0.1, props.theme.colors.primary)}\n  );\n  grid-column: 1 / -1;\n  margin-left: -1rem;\n  margin-right: -1rem;\n  padding: 2rem 2rem 5rem 2rem;\n  box-shadow: inset 0px -10px 30px 0px rgba(0, 0, 0, 0.1);\n`;\n\nconst Content = styled.div`\n  max-width: 1000px;\n  margin: 0 auto;\n\n  a {\n    color: white;\n    &:hover {\n      opacity: 0.85;\n      color: white;\n    }\n  }\n`;\n\nconst Header = props => (\n  <Wrapper>\n    <Content>{props.children}</Content>\n  </Wrapper>\n);\n\nexport default Header;\n\nHeader.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.node]).isRequired,\n};\n","const colors = {\n  primary: '#505050', // Color for buttons or links\n  bg: 'white', // Background color\n  grey: {\n    dark: 'rgba(0, 0, 0, 0.9)',\n    default: 'rgba(0, 0, 0, 0.7)',\n    light: 'rgba(0, 0, 0, 0.5)',\n    ultraLight: 'rgba(0, 0, 0, 0.25)',\n  },\n};\n\nconst transitions = {\n  normal: '0.5s',\n};\n\nconst fontSize = {\n  small: '0.9rem',\n};\n\nconst theme = {\n  colors,\n  transitions,\n  fontSize,\n};\n\nexport default theme;\n","/* eslint no-unused-expressions:0 */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\nimport styled, { ThemeProvider, injectGlobal } from 'styled-components';\nimport { SEO } from 'components';\nimport theme from '../../config/Theme';\nimport { media } from '../utils/media';\n\ninjectGlobal`\n  ::selection {\n    color: ${theme.colors.bg};\n    background: ${theme.colors.primary};\n  }\n  body {\n    background: ${theme.colors.bg};\n    color: ${theme.default};\n    @media ${media.phone} {\n      font-size: 14px;\n    }\n  }\n  a {\n    color: ${theme.colors.grey.dark};\n    text-decoration: underline;\n    transition: all ${theme.transitions.normal};\n  }\n  a:hover {\n    color: ${theme.colors.primary};\n  }\n  h1, h2, h3, h4 {\n    color: ${theme.colors.grey.dark};\n  }\n  blockquote {\n    font-style: italic;\n    position: relative;\n  }\n\n  blockquote:before {\n    content: \"\";\n    position: absolute;\n    background: ${theme.colors.primary};\n    height: 100%;\n    width: 6px;\n    margin-left: -1.6rem;\n  }\n  label {\n    margin-bottom: .5rem;\n    color: ${theme.colors.grey.dark};\n  }\n  input, textarea {\n    border-radius: .5rem;\n    border: none;\n    background: rgba(0, 0, 0, 0.05);\n    padding: .25rem 1rem;\n    &:focus {\n      outline: none;\n    }\n  }\n`;\n\nconst Footer = styled.footer`\n  text-align: center;\n  padding: 3rem 0;\n  span {\n    font-size: 0.75rem;\n  }\n`;\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query LayoutQuery {\n        site {\n          buildTime(formatString: \"DD.MM.YYYY\")\n        }\n      }\n    `}\n    render={data => (\n      <ThemeProvider theme={theme}>\n        <React.Fragment>\n          <SEO />\n          {children}\n          <Footer>\n            &copy; 2018 by Dinkar Pundir. All rights reserved. <br />\n            <a href=\"https://github.com/dinkar/dinkar.github.io\">GitHub Repository</a> <br />\n            <span>Last build: {data.site.buildTime}</span>\n          </Footer>\n        </React.Fragment>\n      </ThemeProvider>\n    )}\n  />\n);\n\nexport default Layout;\n\nLayout.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.node]).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\n\nconst Wrapper = styled.div`\n  display: flex;\n  margin: 6rem auto 0 auto;\n  a {\n    color: ${props => props.theme.colors.primary};\n    display: flex;\n    align-items: center;\n  }\n  justify-items: center;\n`;\n\nconst Prev = styled.div`\n  span {\n    text-transform: uppercase;\n    font-size: 0.8rem;\n    color: ${props => props.theme.colors.grey.light};\n  }\n`;\n\nconst Next = styled.div`\n  margin-left: auto;\n  text-align: right;\n  span {\n    text-transform: uppercase;\n    font-size: 0.8rem;\n    color: ${props => props.theme.colors.grey.light};\n  }\n`;\n\nconst PrevNext = ({ next, prev }) => (\n  <Wrapper>\n    {prev && (\n      <Prev>\n        <span>Previous</span>\n        <Link to={prev.fields.slug}>{prev.frontmatter.title}</Link>\n      </Prev>\n    )}\n\n    {next && (\n      <Next>\n        <span>Next</span>\n        <Link to={next.fields.slug}>{next.frontmatter.title}</Link>\n      </Next>\n    )}\n  </Wrapper>\n);\n\nexport default PrevNext;\n\nPrevNext.propTypes = {\n  next: PropTypes.object,\n  prev: PropTypes.object,\n};\n\nPrevNext.defaultProps = {\n  next: null,\n  prev: null,\n};\n","import styled from 'styled-components';\n\nconst SectionTitle = styled.div`\n  font-size: ${props => props.theme.fontSize.small};\n  text-transform: uppercase;\n  font-weight: bold;\n  text-align: center;\n  color: ${props => props.theme.colors.grey.dark};\n  position: relative;\n  padding-bottom: 1rem;\n  margin-bottom: 4rem;\n\n  &:after {\n    content: '';\n    height: 1px;\n    width: 50px;\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    margin-left: -25px;\n    background: ${props => props.theme.colors.grey.ultraLight};\n  }\n`;\n\nexport default SectionTitle;\n","/* eslint-disable react/require-default-props */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport config from '../../config/SiteConfig';\n\nconst SEO = props => {\n  const { postNode, postPath, postSEO } = props;\n  let title;\n  let description;\n  let image;\n  let postURL;\n  const realPrefix = config.pathPrefix === '/' ? '' : config.pathPrefix;\n  if (postSEO) {\n    const postMeta = postNode.frontmatter;\n    title = postMeta.title; // eslint-disable-line prefer-destructuring\n    description = postNode.excerpt;\n    image = config.siteBanner;\n    postURL = config.siteUrl + realPrefix + postPath;\n  } else {\n    title = config.siteTitle;\n    description = config.siteDescription;\n    image = config.siteBanner;\n  }\n  image = config.siteUrl + realPrefix + image;\n  const blogURL = config.siteUrl + config.pathPrefix;\n  let schemaOrgJSONLD = [\n    {\n      '@context': 'http://schema.org',\n      '@type': 'WebSite',\n      '@id': blogURL,\n      url: blogURL,\n      name: title,\n      alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n    },\n  ];\n  if (postSEO) {\n    schemaOrgJSONLD = [\n      {\n        '@context': 'http://schema.org',\n        '@type': 'BlogPosting',\n        '@id': postURL,\n        url: postURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n        headline: title,\n        image: {\n          '@type': 'ImageObject',\n          url: image,\n        },\n        description,\n        datePublished: postNode.frontmatter.date,\n        dateModified: postNode.frontmatter.date,\n        author: {\n          '@type': 'Person',\n          name: config.author,\n        },\n        publisher: {\n          '@type': 'Organization',\n          name: config.author,\n          logo: {\n            '@type': 'ImageObject',\n            url: config.siteUrl + realPrefix + config.siteLogo,\n          },\n        },\n        isPartOf: blogURL,\n        mainEntityOfPage: {\n          '@type': 'WebSite',\n          '@id': blogURL,\n        },\n      },\n    ];\n  }\n  return (\n    <Helmet>\n      <html lang={config.siteLanguage} />\n      <title>{config.siteTitle}</title>\n      <meta name=\"description\" content={description} />\n      <meta name=\"image\" content={image} />\n      <script type=\"application/ld+json\">{JSON.stringify(schemaOrgJSONLD)}</script>\n      <meta property=\"og:locale\" content={config.ogLanguage} />\n      <meta property=\"og:site_name\" content={config.ogSiteName ? config.ogSiteName : ''} />\n      <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n      {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n      <meta property=\"fb:app_id\" content={config.siteFBAppID ? config.siteFBAppID : ''} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:creator\" content={config.userTwitter ? config.userTwitter : ''} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:url\" content={config.siteUrl} />\n      <meta name=\"twitter:description\" content={description} />\n      <meta name=\"twitter:image\" content={image} />\n    </Helmet>\n  );\n};\n\nexport default SEO;\n\nSEO.propTypes = {\n  postNode: PropTypes.object,\n  postPath: PropTypes.string,\n  postSEO: PropTypes.bool,\n};\n","import styled from 'styled-components';\n\nconst Subline = styled.div`\n  font-size: ${props => props.theme.fontSize.small};\n  color: ${props => props.theme.colors.grey.light};\n  ${props => props.sectionTitle && 'margin-top: -3rem'};\n  ${props => props.sectionTitle && 'margin-bottom: 4rem'};\n  ${props => props.sectionTitle && 'text-align: center'};\n`;\n\nexport default Subline;\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr minmax(320px, 1000px) 1fr;\n  padding: 0 1rem;\n`;\n\nexport default Wrapper;\n"],"sourceRoot":""}