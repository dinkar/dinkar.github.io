{"version":3,"sources":["webpack:///./src/templates/category.js","webpack:///./src/utils/media.js","webpack:///./config/SiteConfig.js","webpack:///./src/components/Article.js","webpack:///./src/components/Button.js","webpack:///./src/components/Header.js","webpack:///./config/Theme.js","webpack:///./src/components/Layout.js","webpack:///./src/components/PrevNext.js","webpack:///./src/components/SectionTitle.js","webpack:///./src/components/SEO.js","webpack:///./src/components/Subline.js","webpack:///./src/components/Wrapper.js"],"names":["Content","styled_components__WEBPACK_IMPORTED_MODULE_5__","div","withConfig","displayName","componentId","props","theme","colors","bg","_utils_media__WEBPACK_IMPORTED_MODULE_7__","tablet","phone","Category","category","pageContext","_props$data$allMarkdo","data","allMarkdownRemark","edges","totalCount","subline","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","components__WEBPACK_IMPORTED_MODULE_6__","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","title","_config_SiteConfig__WEBPACK_IMPORTED_MODULE_8___default","siteTitle","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","sectionTitle","map","post","node","frontmatter","date","excerpt","timeToRead","slug","fields","key","__webpack_exports__","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_2___default","shape","string","isRequired","array","number","postQuery","__webpack_require__","d","media","module","exports","pathPrefix","siteTitleAlt","siteUrl","siteLanguage","siteBanner","favicon","siteDescription","author","siteLogo","userTwitter","ogSiteName","ogLanguage","themeColor","backgroundColor","headerFontFamily","bodyFontFamily","baseFontSize","disqusShortName","Post","styled_components_browser_esm","article","Title","h2","Initiale","span","Excerpt","p","Article_Article","_ref","firstChar","charAt","react_default","gatsby_browser_entry","components_Subline","kebabCase_default","components_Article","prop_types_default","components_Button","button","primary","big","transitions","normal","Object","polished_es","Wrapper","header","Header_Header","children","components_Header","oneOfType","Theme","grey","dark","default","light","ultraLight","fontSize","small","_templateObject","Footer","footer","Layout_Layout","query","render","Fragment","components_SEO","href","site","buildTime","_1719855500","components_Layout","PrevNext_Wrapper","Prev","Next","PrevNext_PrevNext","next","prev","components_PrevNext","object","defaultProps","components_SectionTitle","SEO_SEO","description","image","postURL","postNode","postPath","postSEO","realPrefix","SiteConfig_default","blogURL","schemaOrgJSONLD","@context","@type","@id","url","name","alternateName","headline","datePublished","dateModified","publisher","logo","isPartOf","mainEntityOfPage","Helmet_default","lang","content","type","JSON","stringify","property","siteFBAppID","bool","components_Wrapper"],"mappings":"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","file":"component---src-templates-category-js-aa9ad70ef4bafe9c7b07.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { Link, graphql } from 'gatsby';\nimport styled from 'styled-components';\nimport { Layout, Wrapper, Header, Subline, Article, SectionTitle } from 'components';\nimport { media } from '../utils/media';\nimport config from '../../config/SiteConfig';\n\nconst Content = styled.div`\n  grid-column: 2;\n  box-shadow: 0 4px 120px rgba(0, 0, 0, 0.1);\n  border-radius: 1rem;\n  padding: 2rem 4rem;\n  background-color: ${props => props.theme.colors.bg};\n  z-index: 9000;\n  margin-top: -3rem;\n  @media ${media.tablet} {\n    padding: 3rem 3rem;\n  }\n  @media ${media.phone} {\n    padding: 2rem 1.5rem;\n  }\n`;\n\nconst Category = props => {\n  const { category } = props.pageContext;\n  const { edges, totalCount } = props.data.allMarkdownRemark;\n  const subline = `${totalCount} post${totalCount === 1 ? '' : 's'} tagged with \"${category}\"`;\n\n  return (\n    <Layout>\n      <Wrapper>\n        <Helmet title={`${category} | ${config.siteTitle}`} />\n        <Header>\n          <Link to=\"/\">{config.siteTitle}</Link>\n        </Header>\n        <Content>\n          <SectionTitle>Category &ndash; {category}</SectionTitle>\n          <Subline sectionTitle>\n            {subline} (See <Link to=\"/categories\">all categories</Link>)\n          </Subline>\n          {edges.map(post => (\n            <Article\n              title={post.node.frontmatter.title}\n              date={post.node.frontmatter.date}\n              excerpt={post.node.excerpt}\n              timeToRead={post.node.timeToRead}\n              slug={post.node.fields.slug}\n              category={post.node.frontmatter.category}\n              key={post.node.fields.slug}\n            />\n          ))}\n        </Content>\n      </Wrapper>\n    </Layout>\n  );\n};\n\nexport default Category;\n\nCategory.propTypes = {\n  pageContext: PropTypes.shape({\n    category: PropTypes.string.isRequired,\n  }).isRequired,\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.array.isRequired,\n      totalCount: PropTypes.number.isRequired,\n    }),\n  }).isRequired,\n};\n\nexport const postQuery = graphql`\n  query CategoryPage($category: String!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { category: { eq: $category } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          frontmatter {\n            title\n            date(formatString: \"DD.MM.YYYY\")\n            category\n          }\n          fields {\n            slug\n          }\n          excerpt(pruneLength: 200)\n          timeToRead\n        }\n      }\n    }\n  }\n`;\n","const sizes = {\n  tablet: '1200px',\n  phone: '600px',\n};\n\nexport const media = {\n  tablet: `(max-width: ${sizes.tablet})`,\n  phone: `(max-width: ${sizes.phone})`,\n};\n","module.exports = {\n  pathPrefix: '/', // Prefix for all links.\n\n  siteTitle: 'Subliminal Undertones', // Navigation and Site Title\n  siteTitleAlt: 'Subliminal Undertones - Mostly Harmless', // Alternative Site title for SEO\n  siteUrl: 'https://dinkar.github.io', // Domain of your site. No trailing slash!\n  siteLanguage: 'en', // Language Tag on <html> element\n  siteBanner: '/social/banner.jpg', // Your image for og:image tag. You can find it in the /static folder\n  favicon: 'src/favicon.png', // Your image for favicons. You can find it in the /src folder\n  siteDescription: 'My Punching Bag', // Your site description\n  author: 'DinkarPundir', // Author for schemaORGJSONLD\n\n  siteLogo: '/social/logo.png', // Image for schemaORGJSONLD\n  // siteFBAppID: '123456789', // Facebook App ID - Optional\n  userTwitter: '@dinkarpundir', // Twitter Username - Optional\n  ogSiteName: '', // Facebook Site Name - Optional\n  ogLanguage: 'en_US', // Facebook Language\n\n  // Manifest and Progress color\n  // See: https://developers.google.com/web/fundamentals/web-app-manifest/\n  themeColor: '#3498DB',\n  backgroundColor: '#2b2e3c',\n\n  // Settings for typography.js\n  headerFontFamily: 'Bitter',\n  bodyFontFamily: 'Open Sans',\n  baseFontSize: '18px',\n  disqusShortName: 'dpundir'\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\n\nimport { Subline } from 'components';\n\nconst Post = styled.article`\n  display: flex;\n  flex-direction: column;\n  margin-top: 3.5rem;\n  margin-bottom: 3.5rem;\n`;\n\nconst Title = styled.h2`\n  position: relative;\n  text-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);\n  margin-bottom: 0.75rem;\n`;\n\nconst Initiale = styled.span`\n  position: absolute;\n  font-size: 7rem;\n  transform: translate(-50%, -50%);\n  opacity: 0.08;\n  user-select: none;\n  z-index: -1;\n`;\n\nconst Excerpt = styled.p`\n  grid-column: -1 / 1;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n`;\n\nconst Article = ({ title, date, excerpt, slug, timeToRead, category }) => {\n  const firstChar = title.charAt(0);\n\n  return (\n    <Post>\n      <Title>\n        <Initiale>{firstChar}</Initiale>\n        <Link to={slug}>{title}</Link>\n      </Title>\n      <Subline>\n        {date} &mdash; {timeToRead} Min Read &mdash; In{' '}\n        <Link to={`/categories/${kebabCase(category)}`}>{category}</Link>\n      </Subline>\n      <Excerpt>{excerpt}</Excerpt>\n    </Post>\n  );\n};\n\nexport default Article;\n\nArticle.propTypes = {\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  excerpt: PropTypes.string.isRequired,\n  slug: PropTypes.string.isRequired,\n  timeToRead: PropTypes.number.isRequired,\n  category: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport { lighten } from 'polished';\n\nconst Button = styled.button`\n  background: ${props => props.theme.colors.primary};\n  border: none;\n  display: inline-flex;\n  align-items: center;\n  border-radius: ${props => (props.big ? '1.5rem' : '1rem')};\n  font-size: ${props => (props.big ? '1.2rem' : '1rem')};\n  color: white;\n  padding: ${props => (props.big ? '0.35rem 1.6rem' : '0.25rem 1.5rem')};\n  transition: all ${props => props.theme.transitions.normal};\n  box-shadow: 0 4px 6px rgba(50, 50, 93, 0.11), 0 1px 3px rgba(0, 0, 0, 0.08);\n  &:hover {\n    background: ${props => lighten(0.05, props.theme.colors.primary)};\n    cursor: pointer;\n    transform: translateY(-2px);\n  }\n  &:focus {\n    outline: none;\n  }\n  svg {\n    width: 20px;\n    height: 20px;\n    margin-right: 0.75rem;\n    fill: white;\n  }\n`;\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { darken, lighten } from 'polished';\n\nconst Wrapper = styled.header`\n  background: linear-gradient(\n    45deg,\n    ${props => darken(0.1, props.theme.colors.primary)},\n    ${props => lighten(0.1, props.theme.colors.primary)}\n  );\n  grid-column: 1 / -1;\n  margin-left: -1rem;\n  margin-right: -1rem;\n  padding: 2rem 2rem 5rem 2rem;\n  box-shadow: inset 0px -10px 30px 0px rgba(0, 0, 0, 0.1);\n`;\n\nconst Content = styled.div`\n  max-width: 1000px;\n  margin: 0 auto;\n\n  a {\n    color: white;\n    &:hover {\n      opacity: 0.85;\n      color: white;\n    }\n  }\n`;\n\nconst Header = props => (\n  <Wrapper>\n    <Content>{props.children}</Content>\n  </Wrapper>\n);\n\nexport default Header;\n\nHeader.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.node]).isRequired,\n};\n","const colors = {\n  primary: '#505050', // Color for buttons or links\n  bg: 'white', // Background color\n  grey: {\n    dark: 'rgba(0, 0, 0, 0.9)',\n    default: 'rgba(0, 0, 0, 0.7)',\n    light: 'rgba(0, 0, 0, 0.5)',\n    ultraLight: 'rgba(0, 0, 0, 0.25)',\n  },\n};\n\nconst transitions = {\n  normal: '0.5s',\n};\n\nconst fontSize = {\n  small: '0.9rem',\n};\n\nconst theme = {\n  colors,\n  transitions,\n  fontSize,\n};\n\nexport default theme;\n","/* eslint no-unused-expressions:0 */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\nimport styled, { ThemeProvider, injectGlobal } from 'styled-components';\nimport { SEO } from 'components';\nimport theme from '../../config/Theme';\nimport { media } from '../utils/media';\n\ninjectGlobal`\n  ::selection {\n    color: ${theme.colors.bg};\n    background: ${theme.colors.primary};\n  }\n  body {\n    background: ${theme.colors.bg};\n    color: ${theme.default};\n    @media ${media.phone} {\n      font-size: 14px;\n    }\n  }\n  a {\n    color: ${theme.colors.grey.dark};\n    text-decoration: underline;\n    transition: all ${theme.transitions.normal};\n  }\n  a:hover {\n    color: ${theme.colors.primary};\n  }\n  h1, h2, h3, h4 {\n    color: ${theme.colors.grey.dark};\n  }\n  blockquote {\n    font-style: italic;\n    position: relative;\n  }\n\n  blockquote:before {\n    content: \"\";\n    position: absolute;\n    background: ${theme.colors.primary};\n    height: 100%;\n    width: 6px;\n    margin-left: -1.6rem;\n  }\n  label {\n    margin-bottom: .5rem;\n    color: ${theme.colors.grey.dark};\n  }\n  input, textarea {\n    border-radius: .5rem;\n    border: none;\n    background: rgba(0, 0, 0, 0.05);\n    padding: .25rem 1rem;\n    &:focus {\n      outline: none;\n    }\n  }\n`;\n\nconst Footer = styled.footer`\n  text-align: center;\n  padding: 3rem 0;\n  span {\n    font-size: 0.75rem;\n  }\n`;\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query LayoutQuery {\n        site {\n          buildTime(formatString: \"DD.MM.YYYY\")\n        }\n      }\n    `}\n    render={data => (\n      <ThemeProvider theme={theme}>\n        <React.Fragment>\n          <SEO />\n          {children}\n          <Footer>\n            &copy; 2018 by Dinkar Pundir. All rights reserved. <br />\n            <a href=\"https://github.com/dinkar/dinkar.github.io\">GitHub Repository</a> <br />\n            <span>Last build: {data.site.buildTime}</span>\n          </Footer>\n        </React.Fragment>\n      </ThemeProvider>\n    )}\n  />\n);\n\nexport default Layout;\n\nLayout.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.node]).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\n\nconst Wrapper = styled.div`\n  display: flex;\n  margin: 6rem auto 0 auto;\n  a {\n    color: ${props => props.theme.colors.primary};\n    display: flex;\n    align-items: center;\n  }\n  justify-items: center;\n`;\n\nconst Prev = styled.div`\n  span {\n    text-transform: uppercase;\n    font-size: 0.8rem;\n    color: ${props => props.theme.colors.grey.light};\n  }\n`;\n\nconst Next = styled.div`\n  margin-left: auto;\n  text-align: right;\n  span {\n    text-transform: uppercase;\n    font-size: 0.8rem;\n    color: ${props => props.theme.colors.grey.light};\n  }\n`;\n\nconst PrevNext = ({ next, prev }) => (\n  <Wrapper>\n    {prev && (\n      <Prev>\n        <span>Previous</span>\n        <Link to={prev.fields.slug}>{prev.frontmatter.title}</Link>\n      </Prev>\n    )}\n\n    {next && (\n      <Next>\n        <span>Next</span>\n        <Link to={next.fields.slug}>{next.frontmatter.title}</Link>\n      </Next>\n    )}\n  </Wrapper>\n);\n\nexport default PrevNext;\n\nPrevNext.propTypes = {\n  next: PropTypes.object,\n  prev: PropTypes.object,\n};\n\nPrevNext.defaultProps = {\n  next: null,\n  prev: null,\n};\n","import styled from 'styled-components';\n\nconst SectionTitle = styled.div`\n  font-size: ${props => props.theme.fontSize.small};\n  text-transform: uppercase;\n  font-weight: bold;\n  text-align: center;\n  color: ${props => props.theme.colors.grey.dark};\n  position: relative;\n  padding-bottom: 1rem;\n  margin-bottom: 4rem;\n\n  &:after {\n    content: '';\n    height: 1px;\n    width: 50px;\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    margin-left: -25px;\n    background: ${props => props.theme.colors.grey.ultraLight};\n  }\n`;\n\nexport default SectionTitle;\n","/* eslint-disable react/require-default-props */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport config from '../../config/SiteConfig';\n\nconst SEO = props => {\n  const { postNode, postPath, postSEO } = props;\n  let title;\n  let description;\n  let image;\n  let postURL;\n  const realPrefix = config.pathPrefix === '/' ? '' : config.pathPrefix;\n  if (postSEO) {\n    const postMeta = postNode.frontmatter;\n    title = postMeta.title; // eslint-disable-line prefer-destructuring\n    description = postNode.excerpt;\n    image = config.siteBanner;\n    postURL = config.siteUrl + realPrefix + postPath;\n  } else {\n    title = config.siteTitle;\n    description = config.siteDescription;\n    image = config.siteBanner;\n  }\n  image = config.siteUrl + realPrefix + image;\n  const blogURL = config.siteUrl + config.pathPrefix;\n  let schemaOrgJSONLD = [\n    {\n      '@context': 'http://schema.org',\n      '@type': 'WebSite',\n      '@id': blogURL,\n      url: blogURL,\n      name: title,\n      alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n    },\n  ];\n  if (postSEO) {\n    schemaOrgJSONLD = [\n      {\n        '@context': 'http://schema.org',\n        '@type': 'BlogPosting',\n        '@id': postURL,\n        url: postURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n        headline: title,\n        image: {\n          '@type': 'ImageObject',\n          url: image,\n        },\n        description,\n        datePublished: postNode.frontmatter.date,\n        dateModified: postNode.frontmatter.date,\n        author: {\n          '@type': 'Person',\n          name: config.author,\n        },\n        publisher: {\n          '@type': 'Organization',\n          name: config.author,\n          logo: {\n            '@type': 'ImageObject',\n            url: config.siteUrl + realPrefix + config.siteLogo,\n          },\n        },\n        isPartOf: blogURL,\n        mainEntityOfPage: {\n          '@type': 'WebSite',\n          '@id': blogURL,\n        },\n      },\n    ];\n  }\n  return (\n    <Helmet>\n      <html lang={config.siteLanguage} />\n      <title>{config.siteTitle}</title>\n      <meta name=\"description\" content={description} />\n      <meta name=\"image\" content={image} />\n      <script type=\"application/ld+json\">{JSON.stringify(schemaOrgJSONLD)}</script>\n      <meta property=\"og:locale\" content={config.ogLanguage} />\n      <meta property=\"og:site_name\" content={config.ogSiteName ? config.ogSiteName : ''} />\n      <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n      {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n      <meta property=\"fb:app_id\" content={config.siteFBAppID ? config.siteFBAppID : ''} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:creator\" content={config.userTwitter ? config.userTwitter : ''} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:url\" content={config.siteUrl} />\n      <meta name=\"twitter:description\" content={description} />\n      <meta name=\"twitter:image\" content={image} />\n      <script>\n        {`(function(p,u,s,h){\n          p._pcq = p._pcq || [];\n          p._pcq.push(['_currentTime',Date.now()]);\n        s=u.createElement('script');\n        s.type='text/javascript';\n        s.async=true;\n        s.src='https://cdn.pushcrew.com/js/0cf77fea8cae72092d419a521410ef69.js';\n        h=u.getElementsByTagName('script')[0];\n        h.parentNode.insertBefore(s,h);\n      })(window,document);`}\n      </script>\n    </Helmet>\n  );\n};\n\nexport default SEO;\n\nSEO.propTypes = {\n  postNode: PropTypes.object,\n  postPath: PropTypes.string,\n  postSEO: PropTypes.bool,\n};\n","import styled from 'styled-components';\n\nconst Subline = styled.div`\n  font-size: ${props => props.theme.fontSize.small};\n  color: ${props => props.theme.colors.grey.light};\n  ${props => props.sectionTitle && 'margin-top: -3rem'};\n  ${props => props.sectionTitle && 'margin-bottom: 4rem'};\n  ${props => props.sectionTitle && 'text-align: center'};\n`;\n\nexport default Subline;\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr minmax(320px, 1000px) 1fr;\n  padding: 0 1rem;\n`;\n\nexport default Wrapper;\n"],"sourceRoot":""}