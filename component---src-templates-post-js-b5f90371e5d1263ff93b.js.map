{"version":3,"sources":["webpack:///./src/templates/post.js","webpack:///./src/utils/media.js","webpack:///./config/SiteConfig.js","webpack:///./src/components/Article.js","webpack:///./src/components/Button.js","webpack:///./src/components/Header.js","webpack:///./config/Theme.js","webpack:///./src/components/Layout.js","webpack:///./src/components/PrevNext.js","webpack:///./src/components/SectionTitle.js","webpack:///./src/components/SEO.js","webpack:///./src/components/Subline.js","webpack:///./src/components/Wrapper.js"],"names":["Content","styled_components__WEBPACK_IMPORTED_MODULE_4__","article","withConfig","displayName","componentId","props","theme","colors","bg","_utils_media__WEBPACK_IMPORTED_MODULE_7__","tablet","phone","Title","h1","PostContent","div","Post","_props$pageContext","pageContext","slug","prev","next","postNode","data","markdownRemark","post","frontmatter","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","components__WEBPACK_IMPORTED_MODULE_6__","postPath","postSEO","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","title","_config_SiteConfig__WEBPACK_IMPORTED_MODULE_8___default","siteTitle","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","date","timeToRead","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_5___default","category","dangerouslySetInnerHTML","__html","html","__webpack_exports__","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_1___default","shape","string","isRequired","object","defaultProps","postQuery","__webpack_require__","d","media","module","exports","pathPrefix","siteTitleAlt","siteUrl","siteLanguage","siteBanner","favicon","siteDescription","author","siteLogo","userTwitter","ogSiteName","ogLanguage","themeColor","backgroundColor","headerFontFamily","bodyFontFamily","baseFontSize","styled_components_browser_esm","h2","Initiale","span","Excerpt","p","Article_Article","_ref","excerpt","firstChar","charAt","react_default","gatsby_browser_entry","components_Subline","kebabCase_default","components_Article","prop_types_default","number","components_Button","button","primary","big","transitions","normal","Object","polished_es","Wrapper","header","Header_Header","children","components_Header","oneOfType","array","node","Theme","grey","dark","default","light","ultraLight","fontSize","small","_templateObject","Footer","footer","Layout_Layout","query","render","Fragment","components_SEO","href","site","buildTime","_1719855500","components_Layout","PrevNext_Wrapper","Prev","Next","PrevNext_PrevNext","fields","components_PrevNext","components_SectionTitle","SEO_SEO","description","image","postURL","realPrefix","SiteConfig_default","blogURL","schemaOrgJSONLD","@context","@type","@id","url","name","alternateName","headline","datePublished","dateModified","publisher","logo","isPartOf","mainEntityOfPage","Helmet_default","lang","content","type","JSON","stringify","property","siteFBAppID","bool","sectionTitle","components_Wrapper"],"mappings":"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","file":"component---src-templates-post-js-b5f90371e5d1263ff93b.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { Link, graphql } from 'gatsby';\nimport styled from 'styled-components';\nimport kebabCase from 'lodash/kebabCase';\nimport { Layout, Wrapper, Header, Subline, SEO, PrevNext } from 'components';\nimport { media } from '../utils/media';\nimport config from '../../config/SiteConfig';\nimport '../utils/prismjs-theme.css';\n\nconst Content = styled.article`\n  grid-column: 2;\n  box-shadow: 0 4px 120px rgba(0, 0, 0, 0.1);\n  max-width: 1000px;\n  border-radius: 1rem;\n  padding: 2rem 4rem;\n  background-color: ${props => props.theme.colors.bg};\n  z-index: 9000;\n  margin-top: -3rem;\n  @media ${media.tablet} {\n    padding: 3rem 3rem;\n  }\n  @media ${media.phone} {\n    padding: 2rem 1.5rem;\n  }\n`;\n\nconst Title = styled.h1`\n  margin-bottom: 1rem;\n`;\n\nconst PostContent = styled.div`\n  margin-top: 4rem;\n`;\n\nconst Post = props => {\n  const { slug, prev, next } = props.pageContext;\n  const postNode = props.data.markdownRemark;\n  const post = postNode.frontmatter;\n\n  return (\n    <Layout>\n      <Wrapper>\n        <SEO postPath={slug} postNode={postNode} postSEO />\n        <Helmet title={`${post.title} | ${config.siteTitle}`} />\n        <Header>\n          <Link to=\"/\">{config.siteTitle}</Link>\n        </Header>\n        <Content>\n          <Title>{post.title}</Title>\n          <Subline>\n            {post.date} &mdash; {postNode.timeToRead} Min Read &mdash; In{' '}\n            <Link to={`/categories/${kebabCase(post.category)}`}>{post.category}</Link>\n          </Subline>\n          <PostContent dangerouslySetInnerHTML={{ __html: postNode.html }} />\n          <PrevNext prev={prev} next={next} />\n        </Content>\n      </Wrapper>\n    </Layout>\n  );\n};\n\nexport default Post;\n\nPost.propTypes = {\n  pageContext: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n    next: PropTypes.object,\n    prev: PropTypes.object,\n  }),\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.object.isRequired,\n  }).isRequired,\n};\n\nPost.defaultProps = {\n  pageContext: PropTypes.shape({\n    next: null,\n    prev: null,\n  }),\n};\n\nexport const postQuery = graphql`\n  query postBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      excerpt\n      frontmatter {\n        title\n        date(formatString: \"DD.MM.YYYY\")\n        category\n      }\n      timeToRead\n    }\n  }\n`;\n","const sizes = {\n  tablet: '1200px',\n  phone: '600px',\n};\n\nexport const media = {\n  tablet: `(max-width: ${sizes.tablet})`,\n  phone: `(max-width: ${sizes.phone})`,\n};\n","module.exports = {\n  pathPrefix: '/', // Prefix for all links.\n\n  siteTitle: 'Subliminal Undertones', // Navigation and Site Title\n  siteTitleAlt: 'Subliminal Undertones - Mostly Harmless', // Alternative Site title for SEO\n  siteUrl: 'https://dinkar.github.io', // Domain of your site. No trailing slash!\n  siteLanguage: 'en', // Language Tag on <html> element\n  siteBanner: '/social/banner.jpg', // Your image for og:image tag. You can find it in the /static folder\n  favicon: 'src/favicon.png', // Your image for favicons. You can find it in the /src folder\n  siteDescription: 'My Punching Bag', // Your site description\n  author: 'DinkarPundir', // Author for schemaORGJSONLD\n\n  siteLogo: '/social/logo.png', // Image for schemaORGJSONLD\n  // siteFBAppID: '123456789', // Facebook App ID - Optional\n  userTwitter: '@dinkarpundir', // Twitter Username - Optional\n  ogSiteName: '', // Facebook Site Name - Optional\n  ogLanguage: 'en_US', // Facebook Language\n\n  // Manifest and Progress color\n  // See: https://developers.google.com/web/fundamentals/web-app-manifest/\n  themeColor: '#3498DB',\n  backgroundColor: '#2b2e3c',\n\n  // Settings for typography.js\n  headerFontFamily: 'Bitter',\n  bodyFontFamily: 'Open Sans',\n  baseFontSize: '18px',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\n\nimport { Subline } from 'components';\n\nconst Post = styled.article`\n  display: flex;\n  flex-direction: column;\n  margin-top: 3.5rem;\n  margin-bottom: 3.5rem;\n`;\n\nconst Title = styled.h2`\n  position: relative;\n  text-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);\n  margin-bottom: 0.75rem;\n`;\n\nconst Initiale = styled.span`\n  position: absolute;\n  font-size: 7rem;\n  transform: translate(-50%, -50%);\n  opacity: 0.08;\n  user-select: none;\n  z-index: -1;\n`;\n\nconst Excerpt = styled.p`\n  grid-column: -1 / 1;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n`;\n\nconst Article = ({ title, date, excerpt, slug, timeToRead, category }) => {\n  const firstChar = title.charAt(0);\n\n  return (\n    <Post>\n      <Title>\n        <Initiale>{firstChar}</Initiale>\n        <Link to={slug}>{title}</Link>\n      </Title>\n      <Subline>\n        {date} &mdash; {timeToRead} Min Read &mdash; In{' '}\n        <Link to={`/categories/${kebabCase(category)}`}>{category}</Link>\n      </Subline>\n      <Excerpt>{excerpt}</Excerpt>\n    </Post>\n  );\n};\n\nexport default Article;\n\nArticle.propTypes = {\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  excerpt: PropTypes.string.isRequired,\n  slug: PropTypes.string.isRequired,\n  timeToRead: PropTypes.number.isRequired,\n  category: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport { lighten } from 'polished';\n\nconst Button = styled.button`\n  background: ${props => props.theme.colors.primary};\n  border: none;\n  display: inline-flex;\n  align-items: center;\n  border-radius: ${props => (props.big ? '1.5rem' : '1rem')};\n  font-size: ${props => (props.big ? '1.2rem' : '1rem')};\n  color: white;\n  padding: ${props => (props.big ? '0.35rem 1.6rem' : '0.25rem 1.5rem')};\n  transition: all ${props => props.theme.transitions.normal};\n  box-shadow: 0 4px 6px rgba(50, 50, 93, 0.11), 0 1px 3px rgba(0, 0, 0, 0.08);\n  &:hover {\n    background: ${props => lighten(0.05, props.theme.colors.primary)};\n    cursor: pointer;\n    transform: translateY(-2px);\n  }\n  &:focus {\n    outline: none;\n  }\n  svg {\n    width: 20px;\n    height: 20px;\n    margin-right: 0.75rem;\n    fill: white;\n  }\n`;\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { darken, lighten } from 'polished';\n\nconst Wrapper = styled.header`\n  background: linear-gradient(\n    45deg,\n    ${props => darken(0.1, props.theme.colors.primary)},\n    ${props => lighten(0.1, props.theme.colors.primary)}\n  );\n  grid-column: 1 / -1;\n  margin-left: -1rem;\n  margin-right: -1rem;\n  padding: 2rem 2rem 5rem 2rem;\n  box-shadow: inset 0px -10px 30px 0px rgba(0, 0, 0, 0.1);\n`;\n\nconst Content = styled.div`\n  max-width: 1000px;\n  margin: 0 auto;\n\n  a {\n    color: white;\n    &:hover {\n      opacity: 0.85;\n      color: white;\n    }\n  }\n`;\n\nconst Header = props => (\n  <Wrapper>\n    <Content>{props.children}</Content>\n  </Wrapper>\n);\n\nexport default Header;\n\nHeader.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.node]).isRequired,\n};\n","const colors = {\n  primary: '#505050', // Color for buttons or links\n  bg: 'white', // Background color\n  grey: {\n    dark: 'rgba(0, 0, 0, 0.9)',\n    default: 'rgba(0, 0, 0, 0.7)',\n    light: 'rgba(0, 0, 0, 0.5)',\n    ultraLight: 'rgba(0, 0, 0, 0.25)',\n  },\n};\n\nconst transitions = {\n  normal: '0.5s',\n};\n\nconst fontSize = {\n  small: '0.9rem',\n};\n\nconst theme = {\n  colors,\n  transitions,\n  fontSize,\n};\n\nexport default theme;\n","/* eslint no-unused-expressions:0 */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\nimport styled, { ThemeProvider, injectGlobal } from 'styled-components';\nimport { SEO } from 'components';\nimport theme from '../../config/Theme';\nimport { media } from '../utils/media';\n\ninjectGlobal`\n  ::selection {\n    color: ${theme.colors.bg};\n    background: ${theme.colors.primary};\n  }\n  body {\n    background: ${theme.colors.bg};\n    color: ${theme.default};\n    @media ${media.phone} {\n      font-size: 14px;\n    }\n  }\n  a {\n    color: ${theme.colors.grey.dark};\n    text-decoration: underline;\n    transition: all ${theme.transitions.normal};\n  }\n  a:hover {\n    color: ${theme.colors.primary};\n  }\n  h1, h2, h3, h4 {\n    color: ${theme.colors.grey.dark};\n  }\n  blockquote {\n    font-style: italic;\n    position: relative;\n  }\n\n  blockquote:before {\n    content: \"\";\n    position: absolute;\n    background: ${theme.colors.primary};\n    height: 100%;\n    width: 6px;\n    margin-left: -1.6rem;\n  }\n  label {\n    margin-bottom: .5rem;\n    color: ${theme.colors.grey.dark};\n  }\n  input, textarea {\n    border-radius: .5rem;\n    border: none;\n    background: rgba(0, 0, 0, 0.05);\n    padding: .25rem 1rem;\n    &:focus {\n      outline: none;\n    }\n  }\n`;\n\nconst Footer = styled.footer`\n  text-align: center;\n  padding: 3rem 0;\n  span {\n    font-size: 0.75rem;\n  }\n`;\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query LayoutQuery {\n        site {\n          buildTime(formatString: \"DD.MM.YYYY\")\n        }\n      }\n    `}\n    render={data => (\n      <ThemeProvider theme={theme}>\n        <React.Fragment>\n          <SEO />\n          {children}\n          <Footer>\n            &copy; 2018 by Dinkar Pundir. All rights reserved. <br />\n            <a href=\"https://github.com/dinkar/dinkar.github.io\">GitHub Repository</a> <br />\n            <span>Last build: {data.site.buildTime}</span>\n          </Footer>\n        </React.Fragment>\n      </ThemeProvider>\n    )}\n  />\n);\n\nexport default Layout;\n\nLayout.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.node]).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\n\nconst Wrapper = styled.div`\n  display: flex;\n  margin: 6rem auto 0 auto;\n  a {\n    color: ${props => props.theme.colors.primary};\n    display: flex;\n    align-items: center;\n  }\n  justify-items: center;\n`;\n\nconst Prev = styled.div`\n  span {\n    text-transform: uppercase;\n    font-size: 0.8rem;\n    color: ${props => props.theme.colors.grey.light};\n  }\n`;\n\nconst Next = styled.div`\n  margin-left: auto;\n  text-align: right;\n  span {\n    text-transform: uppercase;\n    font-size: 0.8rem;\n    color: ${props => props.theme.colors.grey.light};\n  }\n`;\n\nconst PrevNext = ({ next, prev }) => (\n  <Wrapper>\n    {prev && (\n      <Prev>\n        <span>Previous</span>\n        <Link to={prev.fields.slug}>{prev.frontmatter.title}</Link>\n      </Prev>\n    )}\n\n    {next && (\n      <Next>\n        <span>Next</span>\n        <Link to={next.fields.slug}>{next.frontmatter.title}</Link>\n      </Next>\n    )}\n  </Wrapper>\n);\n\nexport default PrevNext;\n\nPrevNext.propTypes = {\n  next: PropTypes.object,\n  prev: PropTypes.object,\n};\n\nPrevNext.defaultProps = {\n  next: null,\n  prev: null,\n};\n","import styled from 'styled-components';\n\nconst SectionTitle = styled.div`\n  font-size: ${props => props.theme.fontSize.small};\n  text-transform: uppercase;\n  font-weight: bold;\n  text-align: center;\n  color: ${props => props.theme.colors.grey.dark};\n  position: relative;\n  padding-bottom: 1rem;\n  margin-bottom: 4rem;\n\n  &:after {\n    content: '';\n    height: 1px;\n    width: 50px;\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    margin-left: -25px;\n    background: ${props => props.theme.colors.grey.ultraLight};\n  }\n`;\n\nexport default SectionTitle;\n","/* eslint-disable react/require-default-props */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport config from '../../config/SiteConfig';\n\nconst SEO = props => {\n  const { postNode, postPath, postSEO } = props;\n  let title;\n  let description;\n  let image;\n  let postURL;\n  const realPrefix = config.pathPrefix === '/' ? '' : config.pathPrefix;\n  if (postSEO) {\n    const postMeta = postNode.frontmatter;\n    title = postMeta.title; // eslint-disable-line prefer-destructuring\n    description = postNode.excerpt;\n    image = config.siteBanner;\n    postURL = config.siteUrl + realPrefix + postPath;\n  } else {\n    title = config.siteTitle;\n    description = config.siteDescription;\n    image = config.siteBanner;\n  }\n  image = config.siteUrl + realPrefix + image;\n  const blogURL = config.siteUrl + config.pathPrefix;\n  let schemaOrgJSONLD = [\n    {\n      '@context': 'http://schema.org',\n      '@type': 'WebSite',\n      '@id': blogURL,\n      url: blogURL,\n      name: title,\n      alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n    },\n  ];\n  if (postSEO) {\n    schemaOrgJSONLD = [\n      {\n        '@context': 'http://schema.org',\n        '@type': 'BlogPosting',\n        '@id': postURL,\n        url: postURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n        headline: title,\n        image: {\n          '@type': 'ImageObject',\n          url: image,\n        },\n        description,\n        datePublished: postNode.frontmatter.date,\n        dateModified: postNode.frontmatter.date,\n        author: {\n          '@type': 'Person',\n          name: config.author,\n        },\n        publisher: {\n          '@type': 'Organization',\n          name: config.author,\n          logo: {\n            '@type': 'ImageObject',\n            url: config.siteUrl + realPrefix + config.siteLogo,\n          },\n        },\n        isPartOf: blogURL,\n        mainEntityOfPage: {\n          '@type': 'WebSite',\n          '@id': blogURL,\n        },\n      },\n    ];\n  }\n  return (\n    <Helmet>\n      <html lang={config.siteLanguage} />\n      <title>{config.siteTitle}</title>\n      <meta name=\"description\" content={description} />\n      <meta name=\"image\" content={image} />\n      <script type=\"application/ld+json\">{JSON.stringify(schemaOrgJSONLD)}</script>\n      <meta property=\"og:locale\" content={config.ogLanguage} />\n      <meta property=\"og:site_name\" content={config.ogSiteName ? config.ogSiteName : ''} />\n      <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n      {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n      <meta property=\"fb:app_id\" content={config.siteFBAppID ? config.siteFBAppID : ''} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:creator\" content={config.userTwitter ? config.userTwitter : ''} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:url\" content={config.siteUrl} />\n      <meta name=\"twitter:description\" content={description} />\n      <meta name=\"twitter:image\" content={image} />\n    </Helmet>\n  );\n};\n\nexport default SEO;\n\nSEO.propTypes = {\n  postNode: PropTypes.object,\n  postPath: PropTypes.string,\n  postSEO: PropTypes.bool,\n};\n","import styled from 'styled-components';\n\nconst Subline = styled.div`\n  font-size: ${props => props.theme.fontSize.small};\n  color: ${props => props.theme.colors.grey.light};\n  ${props => props.sectionTitle && 'margin-top: -3rem'};\n  ${props => props.sectionTitle && 'margin-bottom: 4rem'};\n  ${props => props.sectionTitle && 'text-align: center'};\n`;\n\nexport default Subline;\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr minmax(320px, 1000px) 1fr;\n  padding: 0 1rem;\n`;\n\nexport default Wrapper;\n"],"sourceRoot":""}